procedure main {
	a = b + c;
	print d;
	if (e > 0) then {
		f = g - 1;
		call quicksort;
		if (ee > 10) then {
			ff = gg - 11;
		} else {
			call bubblesort;
			if (eee > 100) then {
				call radixsort;
			} else {
				fff = ggg - 111;
			}
		}
	} else {
		h = i * 2;
		read j;
		while (jj <= 7) {
			call insertionsort;
			if (jjj != 12) then {
				call selectionsort;
				while (jjjj == 13) {
					call heapsort;
				}
				jjjj = kkkk % 8;
			} else {
				while (hhhh == 9) {
					hj = jh * 2;
				}
				print hjh;
				read jhj;
			}
		}
	}
	while (k == 3) {
		call shellsort;
		read m;
		n = p / 7;
		while (nn > 3) {
			nnn = ppp * 76;
			call bogosort;
			while (npp < 56) {
				call countingsort;
				print ppn;
				read nnp;
				nnnn = pppp / 5;
			}
		}
	}
	call mergesort;
}

procedure quicksort {
	while (quickinitial == 0) {
		quickresult = quickindex;
	}
}

procedure bubblesort {
	if (bubbleinitial != 1) then {
		bubbleresult = bubbleindex;
	} else {
		spongebob = pants;
	}
}

procedure radixsort {
	read radixindex;
	print radixresult;
}

procedure insertionsort {
	ins = point;
	while (insertioninitial >= 18) {
		count = init - 1;
		while (insertionsecond < 7) {
			count2 = init2 / 3;
		}
	}
}

procedure selectionsort {
	selectionresult = selectionindex / selectionconstant;
}

procedure heapsort {
	heapconstant = 5;
	if (count != 22) then {
		count2 = 30 - start;
		if (count22 == catch22) then {
			heapresult = heapindex - 47;
		} else {
			heapresult2 = heapindex2;
		}
	} else {
		if (count33 != 33) then {
			heapresult3 = heapindex3;
		} else {
			heapresult4 = heapindex4;
		}
		count3 = 27 + end;
	}
}

procedure shellsort {
	shellresult = shellindex;
	call shellsorthelper;
}

procedure shellsorthelper {
	shellhelpresult = shellhelpindex;
}

procedure bogosort {
	while (bogo > 27) {
		call bogosorthelper;
	}
}

procedure bogosorthelper {
	if (bogo2 == 43) then {
		call bogomerge;
	} else {
		bogohelpresult = bogohelpindex;
		call bogofinal;
	}
}

procedure bogomerge {
	bogomergeresult = bogomergeindex;
}

procedure bogofinal {
	bogoresult = bogoindex;
}

procedure countingsort {
	countingresult = countingindex;
}

procedure mergesort {
	mergeresult = mergeindex;
}